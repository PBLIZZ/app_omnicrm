{
  "id": "00000000-0000-0000-0000-000000000000",
  "prevId": "",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.ai_quotas": {
      "name": "ai_quotas",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "period_start": {
          "name": "period_start",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "credits_left": {
          "name": "credits_left",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "ai_quotas_user_id_fkey": {
          "name": "ai_quotas_user_id_fkey",
          "tableFrom": "ai_quotas",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "ai_quotas_rw_own": {
          "name": "ai_quotas_rw_own",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "withCheck": "(user_id = auth.uid())",
          "using": "(user_id = auth.uid())"
        }
      },
      "isRLSEnabled": true
    },
    "public.ai_usage": {
      "name": "ai_usage",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "model": {
          "name": "model",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "input_tokens": {
          "name": "input_tokens",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "output_tokens": {
          "name": "output_tokens",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "cost_usd": {
          "name": "cost_usd",
          "type": "numeric(8, 4)",
          "primaryKey": false,
          "notNull": true,
          "default": "'0'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "ai_usage_created_at_idx": {
          "name": "ai_usage_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "ai_usage_user_id_idx": {
          "name": "ai_usage_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "ai_usage_user_id_fkey": {
          "name": "ai_usage_user_id_fkey",
          "tableFrom": "ai_usage",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "ai_usage_rw_own": {
          "name": "ai_usage_rw_own",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": ["authenticated"],
          "withCheck": "(user_id = auth.uid())",
          "using": "(user_id = auth.uid())"
        }
      },
      "isRLSEnabled": true
    },
    "public.documents": {
      "name": "documents",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "owner_contact_id": {
          "name": "owner_contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "mime": {
          "name": "mime",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "text": {
          "name": "text",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "meta": {
          "name": "meta",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "documents_user_id_idx": {
          "name": "documents_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "documents_user_id_fkey": {
          "name": "documents_user_id_fkey",
          "tableFrom": "documents",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "documents_select_own": {
          "name": "documents_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "(user_id = auth.uid())"
        },
        "documents_insert_own": {
          "name": "documents_insert_own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"]
        },
        "documents_update_own": {
          "name": "documents_update_own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"]
        },
        "documents_delete_own": {
          "name": "documents_delete_own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.embeddings": {
      "name": "embeddings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "owner_type": {
          "name": "owner_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "owner_id": {
          "name": "owner_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "meta": {
          "name": "meta",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "embedding": {
          "name": "embedding",
          "type": "vector(1536)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "embeddings_user_id_idx": {
          "name": "embeddings_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "embeddings_vec_idx": {
          "name": "embeddings_vec_idx",
          "columns": [
            {
              "expression": "embedding",
              "asc": true,
              "nulls": "last",
              "opclass": "vector_cosine_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "ivfflat",
          "with": {}
        }
      },
      "foreignKeys": {
        "embeddings_user_id_fkey": {
          "name": "embeddings_user_id_fkey",
          "tableFrom": "embeddings",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "embeddings_select_own": {
          "name": "embeddings_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "(user_id = auth.uid())"
        }
      },
      "isRLSEnabled": true
    },
    "public.ai_insights": {
      "name": "ai_insights",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "subject_type": {
          "name": "subject_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "subject_id": {
          "name": "subject_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "kind": {
          "name": "kind",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "model": {
          "name": "model",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "ai_insights_user_id_idx": {
          "name": "ai_insights_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "ai_insights_user_id_fkey": {
          "name": "ai_insights_user_id_fkey",
          "tableFrom": "ai_insights",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "ai_insights_select_own": {
          "name": "ai_insights_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "(user_id = auth.uid())"
        }
      },
      "isRLSEnabled": true
    },
    "public.interactions": {
      "name": "interactions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "contact_id": {
          "name": "contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "subject": {
          "name": "subject",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "body_text": {
          "name": "body_text",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "body_raw": {
          "name": "body_raw",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "occurred_at": {
          "name": "occurred_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "source": {
          "name": "source",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "source_id": {
          "name": "source_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "interactions_contact_timeline_idx": {
          "name": "interactions_contact_timeline_idx",
          "columns": [
            {
              "expression": "contact_id",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamp_ops",
              "isExpression": false
            },
            {
              "expression": "occurred_at",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamp_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "interactions_user_id_idx": {
          "name": "interactions_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "interactions_contact_id_contacts_id_fk": {
          "name": "interactions_contact_id_contacts_id_fk",
          "tableFrom": "interactions",
          "tableTo": "contacts",
          "schemaTo": "public",
          "columnsFrom": ["contact_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "interactions_user_id_fkey": {
          "name": "interactions_user_id_fkey",
          "tableFrom": "interactions",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "interactions_select_own": {
          "name": "interactions_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "(user_id = auth.uid())"
        },
        "interactions_insert_own": {
          "name": "interactions_insert_own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"]
        },
        "interactions_update_own": {
          "name": "interactions_update_own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"]
        },
        "interactions_delete_own": {
          "name": "interactions_delete_own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.raw_events": {
      "name": "raw_events",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "payload": {
          "name": "payload",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "contact_id": {
          "name": "contact_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "occurred_at": {
          "name": "occurred_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "raw_events_provider_timeline_idx": {
          "name": "raw_events_provider_timeline_idx",
          "columns": [
            {
              "expression": "provider",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "occurred_at",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "raw_events_user_id_idx": {
          "name": "raw_events_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "raw_events_user_id_fkey": {
          "name": "raw_events_user_id_fkey",
          "tableFrom": "raw_events",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "raw_events_select_own": {
          "name": "raw_events_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "(user_id = auth.uid())"
        },
        "raw_events_insert_own": {
          "name": "raw_events_insert_own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"]
        },
        "raw_events_update_own": {
          "name": "raw_events_update_own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"]
        },
        "raw_events_delete_own": {
          "name": "raw_events_delete_own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.jobs": {
      "name": "jobs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "kind": {
          "name": "kind",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "payload": {
          "name": "payload",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "'queued'"
        },
        "attempts": {
          "name": "attempts",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "jobs_user_id_idx": {
          "name": "jobs_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "jobs_user_id_fkey": {
          "name": "jobs_user_id_fkey",
          "tableFrom": "jobs",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "jobs_select_own": {
          "name": "jobs_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "(user_id = auth.uid())"
        },
        "jobs_insert_own": {
          "name": "jobs_insert_own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"]
        },
        "jobs_update_own": {
          "name": "jobs_update_own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"]
        },
        "jobs_delete_own": {
          "name": "jobs_delete_own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.contacts": {
      "name": "contacts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "display_name": {
          "name": "display_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "primary_email": {
          "name": "primary_email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "primary_phone": {
          "name": "primary_phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "source": {
          "name": "source",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "contacts_user_id_idx": {
          "name": "contacts_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "contacts_user_id_fkey": {
          "name": "contacts_user_id_fkey",
          "tableFrom": "contacts",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "contacts_select_own": {
          "name": "contacts_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "(user_id = auth.uid())"
        },
        "contacts_insert_own": {
          "name": "contacts_insert_own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"]
        },
        "contacts_update_own": {
          "name": "contacts_update_own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"]
        },
        "contacts_delete_own": {
          "name": "contacts_delete_own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.threads": {
      "name": "threads",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "threads_user_id_idx": {
          "name": "threads_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "threads_user_id_fkey": {
          "name": "threads_user_id_fkey",
          "tableFrom": "threads",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "threads_select_own": {
          "name": "threads_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "(user_id = auth.uid())"
        },
        "threads_insert_own": {
          "name": "threads_insert_own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"]
        },
        "threads_update_own": {
          "name": "threads_update_own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"]
        },
        "threads_delete_own": {
          "name": "threads_delete_own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.messages": {
      "name": "messages",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "thread_id": {
          "name": "thread_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "messages_thread_id_idx": {
          "name": "messages_thread_id_idx",
          "columns": [
            {
              "expression": "thread_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "messages_user_id_idx": {
          "name": "messages_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "messages_thread_id_fkey": {
          "name": "messages_thread_id_fkey",
          "tableFrom": "messages",
          "tableTo": "threads",
          "schemaTo": "public",
          "columnsFrom": ["thread_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "messages_user_id_fkey": {
          "name": "messages_user_id_fkey",
          "tableFrom": "messages",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "messages_role_check": {
          "name": "messages_role_check",
          "value": "role = ANY (ARRAY['user'::text, 'assistant'::text, 'tool'::text])"
        }
      },
      "policies": {
        "messages_select_own": {
          "name": "messages_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "(user_id = auth.uid())"
        },
        "messages_insert_own": {
          "name": "messages_insert_own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"]
        },
        "messages_update_own": {
          "name": "messages_update_own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"]
        },
        "messages_delete_own": {
          "name": "messages_delete_own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.tool_invocations": {
      "name": "tool_invocations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "message_id": {
          "name": "message_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tool": {
          "name": "tool",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "args": {
          "name": "args",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "result": {
          "name": "result",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "latency_ms": {
          "name": "latency_ms",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "tool_invocations_message_id_idx": {
          "name": "tool_invocations_message_id_idx",
          "columns": [
            {
              "expression": "message_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "tool_invocations_user_id_idx": {
          "name": "tool_invocations_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "tool_invocations_message_id_fkey": {
          "name": "tool_invocations_message_id_fkey",
          "tableFrom": "tool_invocations",
          "tableTo": "messages",
          "schemaTo": "public",
          "columnsFrom": ["message_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "tool_invocations_user_id_fkey": {
          "name": "tool_invocations_user_id_fkey",
          "tableFrom": "tool_invocations",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "toolinv_select_own": {
          "name": "toolinv_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "(user_id = auth.uid())"
        },
        "toolinv_insert_own": {
          "name": "toolinv_insert_own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"]
        },
        "toolinv_update_own": {
          "name": "toolinv_update_own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"]
        },
        "toolinv_delete_own": {
          "name": "toolinv_delete_own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "tables": {}
  }
}
